/* DEFAULT CODE START */
@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --HEADER-BGCOLOR: #333;
  --HEADER-COLOR: whitesmoke;
}

html {
  font-size: 1.5rem;
  font-family: 'Nunito', sans-serif;
}

body {
  min-height: 100vh;
  display: flex;
  flex-flow: column nowrap;
}

header {
  background-color: var(--HEADER-BGCOLOR);
  color: var(--HEADER-COLOR);
}
/* DEFAULT CODE END */


.header-title-line {
  padding: 0.25rem 0.5rem;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}

.menu-button {
  /* we did use a button element to skip applying a few things and its great for accessibility such as hitting the tab button it will automatically get focused on a button element. if used div instead then for that would have to use tab index */
  background-color: transparent;
  border: none;
  /* because buttons usually do come with border */

  width: 48px;
  height: 48px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  /* relative used to position something absolute inside the button */
}

.menu-icon,
.menu-icon::before,
.menu-icon::after {
  background-color: var(--HEADER-COLOR);
  width: 40px;
  height: 5px;
  border-radius: 5px;
  /* at this time will have one line as hamburger menu -> actually they are three lines on top of each other */
  position: absolute;
  transition: all 0.5s;
}

.menu-icon::before,
.menu-icon::after {
  content: "";
  /* if we did not do this both the lines will not be visible */
}

.menu-icon::before {
  transform: translate(-20px, -12px);
}

.menu-icon::after {
  transform: translate(-20px, 12px);
}
/* three lines of hamburger menu made */

:is(header:hover, header:focus-within) .menu-icon {
  /* when hover over the hamburger, middle line dissappears to ultimatly change hamburger to a */
  background-color: transparent;

  /* giving hamburger a spin when hovering over it */
  transform: rotate(720deg);
}

:is(header:hover, header:focus-within) .menu-icon::before {
  /* for the above line in menu making it first line of cross */
  transform: translateX(-20px) rotate(45deg);
}

:is(header:hover, header:focus-within) .menu-icon::after {
  /* for the below line */
  transform: translateX(-20px) rotate(-45deg);
}

:is(header:hover, header:focus-within) nav {
  /* make visible the navbar */
  display: block;
}

nav {
  /* display: block; */
  /* initally block to see the changes we making */
  display: none;
  transform-origin: top center;
  /* telling the transformation where to start, top center since it is going to drop down */
  /* now adding transition keyframes to this */

  animation: showMenu 0.5s ease-in-out forwards;
  /* forwards such that it remains in its finishing state after completing */

  /* when bouncing animation the last link goes a bit lower and out of navbar, now the color stays with the last word instead of out of navbar */
  background-color: var(--HEADER-BGCOLOR);
}

@keyframes showMenu {
  0% {
    transform: scaleY(0);
  }

  80% {
    transform: scaleY(1.2);
  }

  100% {
    transform: scaleY(0);
  }
}

nav ul {
  list-style-type: none;
  display: flex;
  flex-flow: column nowrap;
}

nav li {
  padding: 0.5rem;
  border-top: 1px solid var(--HEADER-COLOR);
}

nav a {
  display: block;
  text-align: center;
  width: 80%;
  /* applying animation hence set to 80%, if not applying animation then will use 100% and change bg color to show navbar */
  margin: auto;
}

nav a:any-link {
  color: var(--HEADER-COLOR);
  font-weight: bold;
  text-decoration: none;
  /* remove underline from links */
}

/* applying animation */
nav a:hover, 
nav a:focus {
  transform: scale(1.2);
  transition: all 0.3s;
  /* the links will pop out a little when hover over them */
  /* also since it is a button, can use tab and select the links and an outline comes by default when selecting */
} 